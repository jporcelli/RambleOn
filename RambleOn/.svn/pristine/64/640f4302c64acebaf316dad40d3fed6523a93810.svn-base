package rambleonevents;

import accountdata.AccountStatistics;
import java.util.TreeMap;
import static rambleon.RambleOnSettings.*;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import rambleon.RambleOnScreenManager;

/**
 * Handler for the regions played tree on the current account screen.
 *
 * @author James C. Porcelli, SBU ID 108900819
 */
public class RegionsPlayedTreeHandler implements TreeSelectionListener {

    private RambleOnScreenManager screenManager;

    /**
     * Creates a new handler for the regions played tree on the current account
     * page.
     *
     * @param screenManager
     */
    public RegionsPlayedTreeHandler(RambleOnScreenManager screenManager) {
        this.screenManager = screenManager;
    }

    /**
     * Handles events generated by the regions played tree on the current
     * account screen.
     *
     * @param e The event fired by the tree when the user selects a node in the
     * tree.
     */
    @Override
    public void valueChanged(TreeSelectionEvent e) {
        //THE NAME OF THE SELECTED NODE
        String selectedRegionNode = e.getPath().getLastPathComponent().toString();

        //IF A NODE IN THE TREE IS SELECTED AND IS NOT THE ROOT NODE WHICH IS JUST A LABEL FOR THE TREE
        if (!(selectedRegionNode.equals(REGIONS_PLAYED_ROOT))) {
            //THEN UPDATE THE TABLE WITH THE CURRENT PLAYERS STATS FOR THAT REGION

            //GET THE CURRENT PLAYERS STATS FOR ALL THE REGIONS HE OR SHE HAS PLAYED
            TreeMap<String, AccountStatistics> playerStats = screenManager.getAccountsManager().getCurrentAccount().getRegionStats();
            //UPDATE THE TABLE WITH THE STATS FOR THE REGION SELECTED IN THE REGIONS PLAYED TREE
            screenManager.updateTable(playerStats.get(selectedRegionNode));
        }

    }
}
