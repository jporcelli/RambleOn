package rambleonevents;

import accountdata.AccountStatistics;
import java.io.Serializable;
import java.util.TreeMap;
import static rambleon.RambleOnSettings.*;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import rambleon.RambleOnScreenManager;
import worlddata.Region;
import worlddata.RegionType;

/**
 * Handler for the regions played tree on the current account screen.
 *
 * @author James C. Porcelli, SBU ID 108900819
 */
public class RegionsPlayedTreeHandler implements TreeSelectionListener, Serializable {

    private RambleOnScreenManager screenManager;

    /**
     * Creates a new handler for the regions played tree on the current account
     * page.
     *
     * @param screenManager
     */
    public RegionsPlayedTreeHandler(RambleOnScreenManager screenManager) {
        this.screenManager = screenManager;
    }

    /**
     * Handles events generated by the regions played tree on the current
     * account screen.
     *
     * @param e The event fired by the tree when the user selects a node in the
     * tree.
     */
    @Override
    public void valueChanged(TreeSelectionEvent e) {
        //THE NAME OF THE SELECTED NODE

        //CHECK FOR VALUES WITH NO STATS OR ANY OTHER POSSIBILITIES FOR NULL POINTERS IF NOT PREVENTING
        //THEM ALTOGETHER IN THE FIRST PLACE
        DefaultMutableTreeNode selectedRegionNode = ((DefaultMutableTreeNode) e.getPath().getLastPathComponent());

        //GET THE NAME OF THE SELECTED NODE
        String nodeName = selectedRegionNode.toString();

        //IF A NODE IN THE TREE IS SELECTED AND IS NOT THE ROOT NODE WHICH IS JUST A LABEL FOR THE TREE
        if (selectedRegionNode.isLeaf() && nodeName != null) {
            //THEN UPDATE THE TABLE WITH THE CURRENT PLAYERS STATS FOR THAT REGION

            //GET THE CURRENT PLAYERS STATS FOR ALL THE REGIONS HE OR SHE HAS PLAYED
            TreeMap<String, AccountStatistics> playerStats = screenManager.getAccountsManager().getCurrentAccount().getRegionStats();

            //MAKE SURE THERE EXISTS ANY STATS AT AL FIRST
            if (!playerStats.isEmpty() && nodeName != null) {
                //UPDATE THE TABLE WITH THE STATS FOR THE REGION SELECTED IN THE REGIONS PLAYED TREE
                Object tableValue = playerStats.get(selectedRegionNode.toString());
                //MAKE SURE THERE CAN BE NO NULL POINTERS FOR THE MANY DIFFERENT CASES POSSIBLE
                if (tableValue != null) {
                    screenManager.updateTable(playerStats.get(selectedRegionNode.toString()));
                }
            }

            //REFRESH THE WINDOW TO SHOW THE UPDATED TABLE
            screenManager.refreshWindow();
        }

    }
}
